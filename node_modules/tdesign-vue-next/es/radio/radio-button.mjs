/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

import { isVNode, defineComponent, provide, reactive, computed, createVNode } from 'vue';
import { _ as _defineProperty } from '../_chunks/dep-76d93af3.mjs';
import props from './props.mjs';
import _Radio from './radio.mjs';
import { omit } from 'lodash-es';
import { RadioButtonInjectionKey } from './consts/index.mjs';
import { b as useContent } from '../_chunks/dep-c69e7150.mjs';
import '../_chunks/dep-e1d26131.mjs';
import '../_chunks/dep-0bbaca7e.mjs';
import '../_chunks/dep-e6afea32.mjs';
import '../_chunks/dep-d5984b98.mjs';
import '../_chunks/dep-855aa4da.mjs';
import '../_chunks/dep-a2cd0a21.mjs';
import '../_chunks/dep-c72357bc.mjs';
import '../_chunks/dep-f1fa63a0.mjs';
import '../config-provider/hooks/useConfig.mjs';
import '../config-provider/utils/context.mjs';
import '../_chunks/dep-42631175.mjs';
import '../_chunks/dep-6c1c0c68.mjs';
import '../_chunks/dep-d605ac5f.mjs';
import '../_chunks/dep-b0da903a.mjs';
import '../_chunks/dep-e4e86b5b.mjs';
import '../_chunks/dep-baf47de3.mjs';
import '../_chunks/dep-5d812685.mjs';
import '../_chunks/dep-7503a8dd.mjs';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !isVNode(s);
}
var _RadioButton = defineComponent({
  name: "TRadioButton",
  inheritAttrs: false,
  props: props,
  setup: function setup(props2, _ref) {
    var attrs = _ref.attrs;
    provide(RadioButtonInjectionKey, reactive({}));
    var radioProps = computed(function () {
      var res = _objectSpread(_objectSpread({}, props2), omit(attrs, Object.keys(attrs).filter(function (key) {
        return key.startsWith("on");
      })));
      return res;
    });
    var renderContent = useContent();
    return function () {
      var _slot;
      return createVNode(_Radio, radioProps.value, _isSlot(_slot = renderContent("default", "label")) ? _slot : {
        "default": function _default() {
          return [_slot];
        }
      });
    };
  }
});

export { _RadioButton as default };
//# sourceMappingURL=radio-button.mjs.map
