/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

import { defineComponent, createVNode } from 'vue';
import Panel from './components/Panel.mjs';
import props from './props.mjs';
import { useCascaderContext } from './hooks/index.mjs';
import '../_chunks/dep-76d93af3.mjs';
import '../_chunks/dep-e1d26131.mjs';
import './components/Item.mjs';
import 'tdesign-icons-vue-next';
import './utils/index.mjs';
import './utils/className.mjs';
import '../_chunks/dep-0bbaca7e.mjs';
import '../_chunks/dep-e6afea32.mjs';
import './utils/effect.mjs';
import '../_chunks/dep-d5984b98.mjs';
import 'lodash-es';
import './utils/helper.mjs';
import '../checkbox/index.mjs';
import '../checkbox/checkbox.mjs';
import '../checkbox/props.mjs';
import '../_chunks/dep-c69e7150.mjs';
import '../_chunks/dep-c72357bc.mjs';
import '../_chunks/dep-f1fa63a0.mjs';
import '../config-provider/hooks/useConfig.mjs';
import '../config-provider/utils/context.mjs';
import '../_chunks/dep-42631175.mjs';
import '../_chunks/dep-6c1c0c68.mjs';
import '../_chunks/dep-d605ac5f.mjs';
import '../_chunks/dep-b0da903a.mjs';
import '../_chunks/dep-e4e86b5b.mjs';
import '../_chunks/dep-baf47de3.mjs';
import '../_chunks/dep-5d812685.mjs';
import '../_chunks/dep-7503a8dd.mjs';
import '../checkbox/consts/index.mjs';
import '../checkbox/hooks/useCheckboxLazyLoad.mjs';
import '../checkbox/hooks/useKeyboardEvent.mjs';
import '../checkbox/group.mjs';
import '../checkbox/checkbox-group-props.mjs';
import './style/css.mjs';
import '../loading/index.mjs';
import '../loading/directive.mjs';
import '../loading/plugin.mjs';
import '../loading/loading.mjs';
import '../loading/icon/gradient.mjs';
import '../_chunks/dep-855aa4da.mjs';
import '../_chunks/dep-a2cd0a21.mjs';
import '../loading/props.mjs';
import '../_chunks/dep-4551c891.mjs';
import 'mitt';
import '../_chunks/dep-7e50ae7c.mjs';
import '../_chunks/dep-1294ef59.mjs';
import '../_chunks/dep-4923efbb.mjs';

var _CascaderPanel = defineComponent({
  name: "TCascaderPanel",
  props: props,
  setup: function setup(props2, _ref) {
    var slots = _ref.slots;
    var _useCascaderContext = useCascaderContext(props2),
      cascaderContext = _useCascaderContext.cascaderContext;
    return function () {
      return createVNode(Panel, {
        "trigger": props2.trigger,
        "cascaderContext": cascaderContext.value,
        "empty": props2.empty
      }, {
        empty: slots.empty,
        option: slots.option,
        loadingText: slots.loadingText
      });
    };
  }
});

export { _CascaderPanel as default };
//# sourceMappingURL=cascader-panel.mjs.map
