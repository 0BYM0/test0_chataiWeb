/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

import { isVNode, defineComponent, computed, createVNode, mergeProps } from 'vue';
import { _ as _defineProperty } from '../../_chunks/dep-76d93af3.mjs';
import { ChevronDownIcon } from 'tdesign-icons-vue-next';
import useClassName from '../hooks/useClassName.mjs';
import { Tooltip } from '../../tooltip/index.mjs';
import { p as useTNodeDefault, i as useGlobalIcon } from '../../_chunks/dep-c69e7150.mjs';
import { useConfig } from '../../config-provider/hooks/useConfig.mjs';
import '../../_chunks/dep-e1d26131.mjs';
import 'lodash-es';
import '../../_chunks/dep-0bbaca7e.mjs';
import '../../_chunks/dep-e6afea32.mjs';
import '../../_chunks/dep-c72357bc.mjs';
import '../../_chunks/dep-f1fa63a0.mjs';
import '../../config-provider/utils/context.mjs';
import '../../_chunks/dep-42631175.mjs';
import '../../_chunks/dep-6c1c0c68.mjs';
import '../../_chunks/dep-d605ac5f.mjs';
import '../../_chunks/dep-d5984b98.mjs';
import '../../_chunks/dep-b0da903a.mjs';
import '../../_chunks/dep-e4e86b5b.mjs';
import '../../_chunks/dep-baf47de3.mjs';
import '../../_chunks/dep-5d812685.mjs';
import '../../_chunks/dep-7503a8dd.mjs';
import '../../tooltip/tooltip.mjs';
import '../../tooltip/props.mjs';
import '../../popup/props.mjs';
import '../../popup/index.mjs';
import '../../popup/popup.mjs';
import '@popperjs/core';
import '../../popup/container.mjs';
import './style/css.mjs';
import '../../tooltip/utils/index.mjs';

function _isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !isVNode(s);
}
var SorterButton = defineComponent({
  name: "TSorterButton",
  props: {
    sortType: {
      type: String,
      "default": "all"
    },
    sortOrder: {
      type: String,
      "default": function _default() {
        return "";
      }
    },
    locale: Object,
    sortIcon: Function,
    tooltipProps: Object,
    hideSortTips: Boolean
  },
  emits: ["sort-icon-click"],
  setup: function setup(props, context) {
    var _useClassName = useClassName(),
      tableSortClasses = _useClassName.tableSortClasses,
      negativeRotate180 = _useClassName.negativeRotate180;
    var renderTNode = useTNodeDefault();
    var _useConfig = useConfig("table", props.locale),
      t = _useConfig.t,
      globalConfig = _useConfig.globalConfig;
    var _useGlobalIcon = useGlobalIcon({
        ChevronDownIcon: ChevronDownIcon
      }),
      ChevronDownIcon$1 = _useGlobalIcon.ChevronDownIcon;
    var allowSortTypes = computed(function () {
      return props.sortType === "all" ? ["asc", "desc"] : [props.sortType];
    });
    var onSortIconClick = function onSortIconClick(e, direction) {
      context.emit("sort-icon-click", e, {
        descending: direction === "desc"
      });
    };
    var getSortIcon = function getSortIcon(direction, activeClass) {
      var defaultIcon = t(globalConfig.value.sortIcon) || createVNode(ChevronDownIcon$1, null, null);
      var icon = renderTNode("sortIcon", defaultIcon);
      var sortClassName = [activeClass, tableSortClasses.sortIcon, tableSortClasses.iconDirection[direction], _defineProperty({}, negativeRotate180, direction === "asc")];
      return createVNode("span", {
        "class": sortClassName,
        "onClick": function onClick(e) {
          return onSortIconClick(e, direction);
        }
      }, [icon]);
    };
    return function () {
      var classes = [tableSortClasses.trigger, _defineProperty({}, tableSortClasses.doubleIcon, allowSortTypes.value.length > 1)];
      var tooltips = {
        asc: globalConfig.value.sortAscendingOperationText,
        desc: globalConfig.value.sortDescendingOperationText
      };
      var sortButton = allowSortTypes.value.map(function (direction) {
        var _slot;
        var _props$hideSortTips;
        var activeClass = direction === props.sortOrder ? tableSortClasses.iconActive : tableSortClasses.iconDefault;
        var cancelTips = globalConfig.value.sortCancelOperationText;
        var tips = direction === props.sortOrder ? cancelTips : tooltips[direction];
        if ((_props$hideSortTips = props.hideSortTips) !== null && _props$hideSortTips !== void 0 ? _props$hideSortTips : globalConfig.value.hideSortTips) return getSortIcon(direction, activeClass);
        return createVNode(Tooltip, mergeProps({
          "content": tips,
          "placement": "right",
          "showArrow": false,
          "class": tableSortClasses.iconDirection[direction]
        }, props.tooltipProps), _isSlot(_slot = getSortIcon(direction, activeClass)) ? _slot : {
          "default": function _default() {
            return [_slot];
          }
        });
      });
      return createVNode("div", {
        "class": classes
      }, [sortButton]);
    };
  }
});

export { SorterButton as default };
//# sourceMappingURL=sorter-button.mjs.map
