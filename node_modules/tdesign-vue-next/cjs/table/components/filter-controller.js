/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Vue = require('vue');
var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var _typeof = require('@babel/runtime/helpers/typeof');
var tdesignIconsVueNext = require('tdesign-icons-vue-next');
var popup_index = require('../../popup/index.js');
var checkbox_index = require('../../checkbox/index.js');
var radio_index = require('../../radio/index.js');
var input_index = require('../../input/index.js');
var button_index = require('../../button/index.js');
require('@babel/runtime/helpers/toConsumableArray');
require('../../_chunks/dep-8fba4765.js');
var index = require('../../_chunks/dep-7ccc7687.js');
var configProvider_hooks_useConfig = require('../../config-provider/hooks/useConfig.js');
var index$1 = require('../../_chunks/dep-df51b341.js');
require('@babel/runtime/helpers/slicedToArray');
require('../../_chunks/dep-8523711b.js');
var isEmpty = require('../../_chunks/dep-38567573.js');
var isFunction = require('../../_chunks/dep-d7893d44.js');
require('../../popup/popup.js');
require('@popperjs/core');
require('../../_chunks/dep-868e1f85.js');
require('../../_chunks/dep-3509ae3d.js');
require('../../_chunks/dep-359510f3.js');
require('../../_chunks/dep-f906312d.js');
require('../../_chunks/dep-53e7d6ea.js');
require('../../_chunks/dep-3ec672f9.js');
require('../../_chunks/dep-8500f5b7.js');
require('../../_chunks/dep-d7a24f22.js');
require('../../_chunks/dep-e3ed17b8.js');
require('../../_chunks/dep-8fef7bc0.js');
require('../../_chunks/dep-2f93690b.js');
require('../../_chunks/dep-0305ebce.js');
require('../../_chunks/dep-2dec2180.js');
require('../../popup/container.js');
require('../../popup/props.js');
require('../../_chunks/dep-2264eeac.js');
require('../../_chunks/dep-5b5ab11b.js');
require('../../_chunks/dep-4708e1c0.js');
require('../../_chunks/dep-0eaf28bf.js');
require('../../_chunks/dep-eb1b4ee7.js');
require('dayjs');
require('../../_chunks/dep-1fc38e0f.js');
require('../../_chunks/dep-ab1d761f.js');
require('../../_chunks/dep-28d847a7.js');
require('../../_chunks/dep-df147fc1.js');
require('../../_chunks/dep-505a0867.js');
require('../../_chunks/dep-1c58a5b0.js');
require('../../_chunks/dep-ccf6c349.js');
require('../../_chunks/dep-6dcd468b.js');
require('../../_chunks/dep-5f046b75.js');
require('../../_chunks/dep-d401bebf.js');
require('../../_chunks/dep-07964ae0.js');
require('../../_chunks/dep-303fa046.js');
require('../../_chunks/dep-e4d8e384.js');
require('../../_chunks/dep-164c7de5.js');
require('../../_chunks/dep-b7f2b504.js');
require('@babel/runtime/helpers/createClass');
require('@babel/runtime/helpers/classCallCheck');
require('../../_chunks/dep-57de89e9.js');
require('../../_chunks/dep-7d88053e.js');
require('../../_chunks/dep-39a47b2e.js');
require('../../_chunks/dep-10f04a78.js');
require('../../_chunks/dep-d6bf0a64.js');
require('../../_chunks/dep-e9b94c97.js');
require('../../_chunks/dep-727cd003.js');
require('../../_chunks/dep-f504993c.js');
require('../../_chunks/dep-41ff0a93.js');
require('../../checkbox/checkbox.js');
require('../../checkbox/props.js');
require('../../_chunks/dep-2b622501.js');
require('../../_chunks/dep-86eb8dfc.js');
require('../../_chunks/dep-1da09c73.js');
require('../../_chunks/dep-2166f127.js');
require('../../checkbox/consts/index.js');
require('../../checkbox/hooks/useCheckboxLazyLoad.js');
require('../../_chunks/dep-5bdeff12.js');
require('../../checkbox/hooks/useKeyboardEvent.js');
require('../../_chunks/dep-08fbc968.js');
require('../../checkbox/group.js');
require('../../checkbox/checkbox-group-props.js');
require('../../_chunks/dep-98baf2b8.js');
require('../../_chunks/dep-9aadaca3.js');
require('../../_chunks/dep-13ae23f9.js');
require('../../_chunks/dep-12e99cee.js');
require('../../_chunks/dep-28faee79.js');
require('../../radio/radio.js');
require('../../radio/props.js');
require('../../radio/consts/index.js');
require('../../_chunks/dep-45fba3e8.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('../../_chunks/dep-76fcae27.js');
require('../../_chunks/dep-9036997f.js');
require('../../_chunks/dep-c467569f.js');
require('../../_chunks/dep-fb930305.js');
require('../../_chunks/dep-fa954864.js');
require('../../_chunks/dep-44c5a558.js');
require('../../radio/group.js');
require('@babel/runtime/helpers/asyncToGenerator');
require('@babel/runtime/regenerator');
require('../../radio/radio-group-props.js');
require('../../radio/radio-button.js');
require('../../radio/hooks/useKeyboard.js');
require('../../watermark/hooks/index.js');
require('../../_chunks/dep-533a0842.js');
require('../../_chunks/dep-c79defa2.js');
require('../../_chunks/dep-823cb2f3.js');
require('../../_chunks/dep-856c334c.js');
require('../../_chunks/dep-a6d13633.js');
require('../../input/input.js');
require('../../input/props.js');
require('../../input/hooks/useInput.js');
require('../../form/consts/index.js');
require('../../input/hooks/useLengthLimit.js');
require('../../_chunks/dep-41c21e8f.js');
require('../../input/hooks/useInputEventHandler.js');
require('../../input/hooks/useInputWidth.js');
require('../../input/input-group.js');
require('../../input/input-group-props.js');
require('../../button/button.js');
require('../../loading/index.js');
require('../../_chunks/dep-8400584d.js');
require('../../loading/plugin.js');
require('../../_chunks/dep-ee16025d.js');
require('../../loading/icon/gradient.js');
require('../../loading/props.js');
require('../../_chunks/dep-6fc75111.js');
require('../../_chunks/dep-c86d2c66.js');
require('../../_chunks/dep-32074184.js');
require('../../_chunks/dep-be494b00.js');
require('../../button/props.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);
var _typeof__default = /*#__PURE__*/_interopDefaultLegacy(_typeof);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty__default["default"](e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var TableFilterController = Vue.defineComponent({
  name: "TableFilterController",
  props: {
    locale: Object,
    column: Object,
    colIndex: Number,
    tFilterValue: Object,
    innerFilterValue: Object,
    tableFilterClasses: Object,
    isFocusClass: String,
    primaryTableElement: {},
    popupProps: Object,
    attach: [String, Function],
    onVisibleChange: Function,
    filterIcon: [Function]
  },
  emits: ["inner-filter-change", "reset", "confirm"],
  setup: function setup(props, context) {
    var triggerElementRef = Vue.ref(null);
    var renderTNode = index.useTNodeDefault();
    var _useConfig = configProvider_hooks_useConfig.useConfig("table", props.locale),
      t = _useConfig.t,
      globalConfig = _useConfig.globalConfig;
    var _useGlobalIcon = index$1.useGlobalIcon({
        FilterIcon: tdesignIconsVueNext.FilterIcon
      }),
      FilterIcon = _useGlobalIcon.FilterIcon;
    var filterPopupVisible = Vue.ref(false);
    var onFilterPopupVisibleChange = function onFilterPopupVisibleChange(visible) {
      var _props$onVisibleChang;
      filterPopupVisible.value = visible;
      (_props$onVisibleChang = props.onVisibleChange) === null || _props$onVisibleChang === void 0 || _props$onVisibleChang.call(props, visible);
    };
    var renderComponent = function renderComponent(column, filterComponentProps, component) {
      if (!component) return null;
      var isVueComponent = !!component.setup;
      if (isFunction.isFunction(column.filter.component) && !isVueComponent) {
        return column.filter.component(function (v, b) {
          var tProps = _typeof__default["default"](b) === "object" && "attrs" in b ? b.attrs : {};
          return Vue.h(v, {
            props: _objectSpread(_objectSpread({}, filterComponentProps), tProps)
          });
        });
      }
      var filter = column.filter || {};
      return Vue.createVNode(component, Vue.mergeProps({
        "class": filter.classNames,
        "style": filter.style
      }, filter.attrs, filterComponentProps), null);
    };
    var getFilterContent = function getFilterContent(column) {
      var _column$filter, _column$filter2, _column$filter3;
      var types = ["single", "multiple", "input"];
      if ((_column$filter = column.filter) !== null && _column$filter !== void 0 && _column$filter.type && !types.includes(column.filter.type)) {
        console.error("TDesign Table Error: column.filter.type must be the following: ".concat(JSON.stringify(types)));
        return;
      }
      var _props$innerFilterVal = props.innerFilterValue,
        innerFilterValue = _props$innerFilterVal === void 0 ? {} : _props$innerFilterVal;
      var component = {
        single: radio_index.RadioGroup,
        multiple: checkbox_index.CheckboxGroup,
        input: input_index.Input
      }[column.filter.type] || column.filter.component;
      if (!component && !column.filter.component) return;
      var filterComponentProps = _objectSpread(_objectSpread({
        options: ["single", "multiple"].includes(column.filter.type) ? (_column$filter2 = column.filter) === null || _column$filter2 === void 0 ? void 0 : _column$filter2.list : void 0
      }, ((_column$filter3 = column.filter) === null || _column$filter3 === void 0 ? void 0 : _column$filter3.props) || {}), {}, {
        onChange: function onChange(val, ctx) {
          var _column$filter$props, _column$filter4;
          context.emit("inner-filter-change", val, column);
          if ((_column$filter$props = column.filter.props) !== null && _column$filter$props !== void 0 && _column$filter$props.onChange) {
            var _column$filter$props$, _column$filter$props2;
            (_column$filter$props$ = (_column$filter$props2 = column.filter.props).onChange) === null || _column$filter$props$ === void 0 || _column$filter$props$.call(_column$filter$props2, val, ctx);
          }
          if ((_column$filter4 = column.filter) !== null && _column$filter4 !== void 0 && (_column$filter4 = _column$filter4.confirmEvents) !== null && _column$filter4 !== void 0 && _column$filter4.includes("onChange")) {
            filterPopupVisible.value = false;
          }
        }
      });
      if (column.colKey && innerFilterValue && column.colKey in innerFilterValue) {
        filterComponentProps.value = innerFilterValue === null || innerFilterValue === void 0 ? void 0 : innerFilterValue[column.colKey];
      }
      if (column.filter.confirmEvents) {
        column.filter.confirmEvents.forEach(function (event) {
          if (event === "onChange") return;
          filterComponentProps[event] = function () {
            context.emit("confirm", column);
            filterPopupVisible.value = false;
          };
        });
      }
      return Vue.createVNode("div", {
        "class": props.tableFilterClasses.contentInner
      }, [renderComponent(column, filterComponentProps, component)]);
    };
    var getBottomButtons = function getBottomButtons(column) {
      if (!column.filter.showConfirmAndReset) return;
      return Vue.createVNode("div", {
        "class": props.tableFilterClasses.bottomButtons
      }, [Vue.createVNode(button_index.Button, {
        "theme": "default",
        "size": "small",
        "onClick": function onClick() {
          context.emit("reset", column);
          filterPopupVisible.value = false;
        }
      }, {
        "default": function _default() {
          return [globalConfig.value.resetText];
        }
      }), Vue.createVNode(button_index.Button, {
        "theme": "primary",
        "size": "small",
        "onClick": function onClick() {
          context.emit("confirm", column);
          filterPopupVisible.value = false;
        }
      }, {
        "default": function _default() {
          return [globalConfig.value.confirmText];
        }
      })]);
    };
    var getContent = function getContent() {
      return Vue.createVNode("div", {
        "class": props.tableFilterClasses.popupContent
      }, [getFilterContent(props.column), getBottomButtons(props.column)]);
    };
    return function () {
      var _props$tFilterValue;
      if (!props.column.filter || props.column.filter && !Object.keys(props.column.filter).length) return null;
      var defaultFilterIcon = t(globalConfig.value.filterIcon) || Vue.createVNode(FilterIcon, null, null);
      var filterValue = (_props$tFilterValue = props.tFilterValue) === null || _props$tFilterValue === void 0 ? void 0 : _props$tFilterValue[props.column.colKey];
      var isObjectTrue = _typeof__default["default"](filterValue) === "object" && !isEmpty.isEmpty(filterValue);
      var isValueExist = ![null, void 0, ""].includes(filterValue) && _typeof__default["default"](filterValue) !== "object";
      return Vue.createVNode(popup_index.Popup, Vue.mergeProps({
        "attach": props.attach || (props.primaryTableElement ? function () {
          return props.primaryTableElement;
        } : void 0),
        "visible": filterPopupVisible.value,
        "destroyOnClose": true,
        "trigger": "click",
        "placement": "bottom-right",
        "showArrow": true,
        "overlayClassName": props.tableFilterClasses.popup,
        "onVisibleChange": function onVisibleChange(val) {
          return onFilterPopupVisibleChange(val);
        },
        "class": [props.tableFilterClasses.icon, _defineProperty__default["default"]({}, props.isFocusClass, isObjectTrue || isValueExist)],
        "content": getContent
      }, props.popupProps), {
        "default": function _default() {
          return [Vue.createVNode("div", {
            "ref": triggerElementRef
          }, [renderTNode("filterIcon", {
            defaultNode: defaultFilterIcon,
            params: {
              col: props.column,
              colIndex: props.colIndex
            }
          })])];
        }
      });
    };
  }
});

exports["default"] = TableFilterController;
//# sourceMappingURL=filter-controller.js.map
