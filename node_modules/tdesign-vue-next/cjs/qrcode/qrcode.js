/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Vue = require('vue');
var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var qrcode_props = require('./props.js');
var qrcode_hooks_useQRCode = require('../_chunks/dep-a194ea8f.js');
require('@babel/runtime/helpers/toConsumableArray');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-8fba4765.js');
var index$1 = require('../_chunks/dep-7ccc7687.js');
var index = require('../_chunks/dep-8500f5b7.js');
var _slicedToArray = require('@babel/runtime/helpers/slicedToArray');
require('../_chunks/dep-8523711b.js');
var common = require('../_chunks/dep-08fbc968.js');
var dom = require('../_chunks/dep-868e1f85.js');
var isEqual = require('../_chunks/dep-c79defa2.js');
var debounce = require('../_chunks/dep-10f04a78.js');
var isString = require('../_chunks/dep-3509ae3d.js');
var qrcode_components_qrcodeCanvas = require('./components/qrcode-canvas.js');
var qrcode_components_qrcodeSvg = require('./components/qrcode-svg.js');
var qrcode_components_qrcodeStatus = require('./components/qrcode-status.js');
var isNumber = require('../_chunks/dep-9036997f.js');
var configProvider_hooks_useConfig = require('../config-provider/hooks/useConfig.js');
require('@babel/runtime/helpers/classCallCheck');
require('@babel/runtime/helpers/createClass');
require('../_chunks/dep-5b5ab11b.js');
require('../_chunks/dep-d6bf0a64.js');
require('../_chunks/dep-4708e1c0.js');
require('../_chunks/dep-f906312d.js');
require('../_chunks/dep-e9b94c97.js');
require('../_chunks/dep-0305ebce.js');
require('../_chunks/dep-359510f3.js');
require('../_chunks/dep-2dec2180.js');
require('../_chunks/dep-53e7d6ea.js');
require('../_chunks/dep-727cd003.js');
require('../_chunks/dep-f504993c.js');
require('../_chunks/dep-2f93690b.js');
require('../_chunks/dep-8fef7bc0.js');
require('../_chunks/dep-d7893d44.js');
require('../_chunks/dep-0eaf28bf.js');
require('../_chunks/dep-eb1b4ee7.js');
require('dayjs');
require('../_chunks/dep-1fc38e0f.js');
require('../_chunks/dep-ab1d761f.js');
require('../_chunks/dep-28d847a7.js');
require('../_chunks/dep-df147fc1.js');
require('../_chunks/dep-505a0867.js');
require('../_chunks/dep-1c58a5b0.js');
require('../_chunks/dep-ccf6c349.js');
require('../_chunks/dep-6dcd468b.js');
require('../_chunks/dep-5f046b75.js');
require('../_chunks/dep-d401bebf.js');
require('../_chunks/dep-07964ae0.js');
require('../_chunks/dep-823cb2f3.js');
require('../_chunks/dep-13ae23f9.js');
require('../_chunks/dep-856c334c.js');
require('../_chunks/dep-303fa046.js');
require('../_chunks/dep-e4d8e384.js');
require('../_chunks/dep-164c7de5.js');
require('../_chunks/dep-b7f2b504.js');
require('../_chunks/dep-7d88053e.js');
require('./components/props.js');
require('tdesign-icons-vue-next');
require('../loading/index.js');
require('../_chunks/dep-8400584d.js');
require('../loading/plugin.js');
require('../_chunks/dep-ee16025d.js');
require('../loading/icon/gradient.js');
require('../_chunks/dep-d7a24f22.js');
require('../_chunks/dep-45fba3e8.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('../_chunks/dep-28faee79.js');
require('../_chunks/dep-76fcae27.js');
require('../_chunks/dep-3ec672f9.js');
require('../loading/props.js');
require('../_chunks/dep-6fc75111.js');
require('../_chunks/dep-c86d2c66.js');
require('../_chunks/dep-fb930305.js');
require('../_chunks/dep-32074184.js');
require('../_chunks/dep-be494b00.js');
require('../_chunks/dep-41ff0a93.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);
var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty__default["default"](e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var DEFAULT_OPTIONS = {
  debounceTime: 0,
  config: {
    attributes: true,
    childList: true,
    characterData: true,
    subtree: true
  }
};
function useMutationObservable(targetEl, callback) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_OPTIONS;
  var mergedOptions = Vue.ref(_objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options));
  var observer = null;
  var initObserver = function initObserver() {
    var _observer;
    if (!targetEl) return;
    var _mergedOptions$value = mergedOptions.value,
      _mergedOptions$value$ = _mergedOptions$value.debounceTime,
      debounceTime = _mergedOptions$value$ === void 0 ? 0 : _mergedOptions$value$,
      _mergedOptions$value$2 = _mergedOptions$value.config,
      config = _mergedOptions$value$2 === void 0 ? DEFAULT_OPTIONS.config : _mergedOptions$value$2;
    var handler = function handler() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      callback === null || callback === void 0 || callback.apply(void 0, args);
    };
    (_observer = observer) === null || _observer === void 0 || _observer.disconnect();
    observer = new MutationObserver(debounceTime > 0 ? debounce.debounce(handler, debounceTime) : handler);
    observer.observe(targetEl, config);
  };
  Vue.watch(function () {
    return options;
  }, function (newOptions) {
    if (!isEqual.isEqual(newOptions, mergedOptions.value)) {
      mergedOptions.value = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), newOptions);
      initObserver();
    }
  }, {
    deep: true
  });
  Vue.onMounted(initObserver);
  Vue.onBeforeUnmount(function () {
    var _observer2;
    return (_observer2 = observer) === null || _observer2 === void 0 ? void 0 : _observer2.disconnect();
  });
}

function useVariables(variables) {
  var _document;
  var values = {};
  var varsArray = [];
  varsArray = Object.values(variables);
  Object.entries(variables).forEach(function (_ref) {
    var _ref2 = _slicedToArray__default["default"](_ref, 2),
      key = _ref2[0],
      varName = _ref2[1];
    values[key] = Vue.ref(dom.getColorTokenColor(varName));
  });
  varsArray.forEach(function (varName) {
    values[varName] = Vue.ref(dom.getColorTokenColor(varName));
  });
  var targetElement = (_document = document) === null || _document === void 0 ? void 0 : _document.documentElement;
  useMutationObservable(targetElement, function (mutationsList) {
    mutationsList.some(function (mutation) {
      if (mutation.type === "attributes" && mutation.attributeName === common.THEME_MODE) {
        if (isString.isString(variables) || Array.isArray(variables)) {
          varsArray.forEach(function (varName) {
            values[varName].value = dom.getColorTokenColor(varName);
          });
        } else {
          Object.entries(variables).forEach(function (_ref3) {
            var _ref4 = _slicedToArray__default["default"](_ref3, 2),
              key = _ref4[0],
              varName = _ref4[1];
            values[key].value = dom.getColorTokenColor(varName);
          });
        }
        return true;
      }
      return false;
    });
  });
  return values;
}

var _QRCode = Vue.defineComponent({
  name: "TQRCode",
  props: qrcode_props["default"],
  setup: function setup(props2) {
    var classPrefix = index.usePrefixClass();
    var renderTNodeJSX = index$1.useTNodeJSX();
    var _useConfig = configProvider_hooks_useConfig.useConfig("qrcode"),
      globalConfig = _useConfig.globalConfig;
    var _useVariables = useVariables({
        themeFgColor: "--td-text-color-primary",
        themeBgColor: "--td-bg-color-specialcomponent"
      }),
      themeFgColor = _useVariables.themeFgColor,
      themeBgColor = _useVariables.themeBgColor;
    var finalBgColor = Vue.computed(function () {
      return props2.bgColor || themeBgColor.value || "transparent";
    });
    var finalFgColor = Vue.computed(function () {
      return props2.color || themeFgColor.value || qrcode_hooks_useQRCode.DEFAULT_FRONT_COLOR;
    });
    if (!props2.value) {
      return null;
    }
    var imageSettings = Vue.computed(function () {
      var _props2$iconSize$heig, _props2$iconSize, _props2$iconSize$widt, _props2$iconSize2;
      return {
        src: props2.icon,
        x: void 0,
        y: void 0,
        height: isNumber.isNumber(props2.iconSize) ? props2.iconSize : (_props2$iconSize$heig = (_props2$iconSize = props2.iconSize) === null || _props2$iconSize === void 0 ? void 0 : _props2$iconSize.height) !== null && _props2$iconSize$heig !== void 0 ? _props2$iconSize$heig : 40,
        width: isNumber.isNumber(props2.iconSize) ? props2.iconSize : (_props2$iconSize$widt = (_props2$iconSize2 = props2.iconSize) === null || _props2$iconSize2 === void 0 ? void 0 : _props2$iconSize2.width) !== null && _props2$iconSize$widt !== void 0 ? _props2$iconSize$widt : 40,
        excavate: true,
        crossOrigin: "anonymous"
      };
    });
    var classes = Vue.computed(function () {
      return ["".concat(classPrefix.value, "-qrcode"), _defineProperty__default["default"](_defineProperty__default["default"]({}, "".concat(classPrefix.value, "-borderless"), props2.borderless), "".concat(classPrefix.value, "-qrcode-svg"), props2.type === "svg")];
    });
    var mergedStyle = Vue.computed(function () {
      return {
        backgroundColor: finalBgColor.value,
        width: "".concat(props2.size, "px"),
        height: "".concat(props2.size, "px")
      };
    });
    return function () {
      var QRCodeProps = {
        value: props2.value,
        size: props2.size,
        bgColor: finalBgColor.value,
        fgColor: finalFgColor.value,
        imageSettings: props2.icon ? imageSettings.value : void 0,
        level: props2.level
      };
      return Vue.createVNode("div", Vue.mergeProps({
        "class": classes.value,
        "style": mergedStyle.value
      }, {
        level: props2.level
      }), [props2.status !== "active" && Vue.createVNode("div", {
        "class": ["".concat(classPrefix.value, "-mask"), _defineProperty__default["default"]({}, "".concat(classPrefix.value, "-").concat(props2.status), props2.status !== "loading")]
      }, [Vue.createVNode(qrcode_components_qrcodeStatus["default"], {
        "locale": globalConfig.value,
        "status": props2.status,
        "onRefresh": props2.onRefresh,
        "statusRender": renderTNodeJSX("statusRender", {
          params: {
            status: props2.status,
            onRefresh: props2.onRefresh
          }
        })
      }, null)]), props2.type === "canvas" ? Vue.createVNode(qrcode_components_qrcodeCanvas["default"], Vue.mergeProps(QRCodeProps, {
        "size": props2.size
      }), null) : Vue.createVNode(qrcode_components_qrcodeSvg["default"], Vue.mergeProps(QRCodeProps, {
        "size": props2.size
      }), null)]);
    };
  }
});

exports["default"] = _QRCode;
//# sourceMappingURL=qrcode.js.map
