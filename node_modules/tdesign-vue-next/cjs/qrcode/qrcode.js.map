{"version":3,"file":"qrcode.js","sources":["../../../shared/hooks/useMutationObservable/index.ts","../../../shared/hooks/useVariables/index.ts","../../../components/qrcode/qrcode.tsx"],"sourcesContent":["import { onBeforeUnmount, onMounted, ref, watch } from 'vue';\nimport { debounce, isEqual } from 'lodash-es';\n\nexport interface MutationCallback {\n  (mutations: MutationRecord[]): void;\n}\n\ninterface Options {\n  debounceTime?: number;\n  config?: MutationObserverInit;\n}\n\nconst DEFAULT_OPTIONS: Options = {\n  debounceTime: 0,\n  config: {\n    attributes: true,\n    childList: true,\n    characterData: true,\n    subtree: true,\n  },\n};\n\n/**\n * useMutationObservable\n * @param targetEl 监听对象\n * @param callback 回调方法\n * @param options 配置项\n */\nexport function useMutationObservable(\n  targetEl: HTMLElement | null,\n  callback: MutationCallback,\n  options: Options = DEFAULT_OPTIONS,\n) {\n  const mergedOptions = ref<Options>({ ...DEFAULT_OPTIONS, ...options });\n  let observer: MutationObserver | null = null;\n\n  const initObserver = () => {\n    if (!targetEl) return;\n\n    const { debounceTime = 0, config = DEFAULT_OPTIONS.config } = mergedOptions.value;\n    const handler: MutationCallback = (...args) => {\n      callback?.(...args);\n    };\n\n    observer?.disconnect();\n    observer = new MutationObserver(debounceTime > 0 ? debounce(handler, debounceTime) : handler);\n    observer.observe(targetEl, config);\n  };\n\n  watch(\n    () => options,\n    (newOptions) => {\n      if (!isEqual(newOptions, mergedOptions.value)) {\n        mergedOptions.value = { ...DEFAULT_OPTIONS, ...newOptions };\n        initObserver();\n      }\n    },\n    { deep: true },\n  );\n\n  onMounted(initObserver);\n  onBeforeUnmount(() => observer?.disconnect());\n}\n\nexport default useMutationObservable;\n","import { ref } from 'vue';\nimport type { Ref } from 'vue';\nimport { isString } from 'lodash-es';\nimport { THEME_MODE } from '@tdesign/common-js/common';\nimport { getColorTokenColor } from '@tdesign/shared-utils/dom';\nimport useMutationObservable from '../useMutationObservable';\n\n/**\n * useVariables\n * @param variable CSS 变量名\n * @example\n *   const { textColor, brandColor } = useVariables({\n *      textColor: '--td-color-primary',\n *      brandColor: '--td-brand-color',\n *   });\n */\nexport function useVariables<T extends Record<string, string>>(variables: T): Record<keyof T, Ref<string>> {\n  const values = {} as Record<keyof T, Ref<string>>;\n  let varsArray: string[] = [];\n\n  varsArray = Object.values(variables);\n  Object.entries(variables).forEach(([key, varName]) => {\n    values[key as keyof T] = ref(getColorTokenColor(varName));\n  });\n\n  varsArray.forEach((varName) => {\n    values[varName as keyof T] = ref(getColorTokenColor(varName));\n  });\n\n  const targetElement = document?.documentElement;\n  useMutationObservable(targetElement, (mutationsList) => {\n    mutationsList.some((mutation) => {\n      if (mutation.type === 'attributes' && mutation.attributeName === THEME_MODE) {\n        if (isString(variables) || Array.isArray(variables)) {\n          varsArray.forEach((varName) => {\n            values[varName].value = getColorTokenColor(varName);\n          });\n        } else {\n          Object.entries(variables).forEach(([key, varName]) => {\n            values[key].value = getColorTokenColor(varName);\n          });\n        }\n        return true;\n      }\n      return false;\n    });\n  });\n\n  return values;\n}\n","import { computed, defineComponent } from 'vue';\nimport props from './props';\nimport { DEFAULT_FRONT_COLOR } from '@tdesign/common-js/qrcode/utils';\nimport { usePrefixClass, useConfig, useTNodeJSX, useVariables } from '@tdesign/shared-hooks';\n\nimport QRCodeCanvas from './components/qrcode-canvas';\nimport QRCodeSVG from './components/qrcode-svg';\nimport QRcodeStatus from './components/qrcode-status';\n\nimport type { ImageSettings } from '@tdesign/common-js/qrcode/types';\nimport { isNumber } from 'lodash-es';\n\nexport default defineComponent({\n  name: 'TQRCode',\n  props,\n  setup(props) {\n    const classPrefix = usePrefixClass();\n    const renderTNodeJSX = useTNodeJSX();\n    const { globalConfig } = useConfig('qrcode');\n\n    const { themeFgColor, themeBgColor } = useVariables({\n      themeFgColor: '--td-text-color-primary',\n      themeBgColor: '--td-bg-color-specialcomponent',\n    });\n\n    // bgColor：自定义颜色 > 主题色适配 > 透明[transparent]\n    const finalBgColor = computed(() => props.bgColor || themeBgColor.value || 'transparent');\n    // color[fgColor]：自定义颜色 > 主题色适配 > 默认颜色[#000000]\n    const finalFgColor = computed(() => props.color || themeFgColor.value || DEFAULT_FRONT_COLOR);\n\n    if (!props.value) {\n      return null;\n    }\n\n    const imageSettings = computed<ImageSettings>(() => {\n      return {\n        src: props.icon,\n        x: undefined,\n        y: undefined,\n        height: isNumber(props.iconSize) ? props.iconSize : props.iconSize?.height ?? 40,\n        width: isNumber(props.iconSize) ? props.iconSize : props.iconSize?.width ?? 40,\n        excavate: true,\n        crossOrigin: 'anonymous',\n      };\n    });\n\n    const classes = computed(() => {\n      return [\n        `${classPrefix.value}-qrcode`,\n        {\n          [`${classPrefix.value}-borderless`]: props.borderless,\n          [`${classPrefix.value}-qrcode-svg`]: props.type === 'svg',\n        },\n      ];\n    });\n\n    const mergedStyle = computed(() => {\n      return {\n        backgroundColor: finalBgColor.value,\n        width: `${props.size}px`,\n        height: `${props.size}px`,\n      };\n    });\n\n    return () => {\n      const QRCodeProps = {\n        value: props.value,\n        size: props.size,\n        bgColor: finalBgColor.value,\n        fgColor: finalFgColor.value,\n        imageSettings: props.icon ? imageSettings.value : undefined,\n        level: props.level,\n      };\n\n      return (\n        <div class={classes.value} style={mergedStyle.value} {...{ level: props.level }}>\n          {props.status !== 'active' && (\n            <div\n              class={[\n                `${classPrefix.value}-mask`,\n                { [`${classPrefix.value}-${props.status}`]: props.status !== 'loading' },\n              ]}\n            >\n              <QRcodeStatus\n                locale={globalConfig.value}\n                status={props.status}\n                onRefresh={props.onRefresh}\n                statusRender={renderTNodeJSX('statusRender', {\n                  params: { status: props.status, onRefresh: props.onRefresh },\n                })}\n              />\n            </div>\n          )}\n          {props.type === 'canvas' ? (\n            <QRCodeCanvas {...QRCodeProps} size={props.size} />\n          ) : (\n            <QRCodeSVG {...QRCodeProps} size={props.size} />\n          )}\n        </div>\n      );\n    };\n  },\n});\n"],"names":["DEFAULT_OPTIONS","debounceTime","config","attributes","childList","characterData","subtree","useMutationObservable","targetEl","callback","options","arguments","length","undefined","mergedOptions","ref","_objectSpread","observer","initObserver","_observer","_mergedOptions$value","value","_mergedOptions$value$","_mergedOptions$value$2","handler","_len","args","Array","_key","apply","disconnect","MutationObserver","debounce","observe","watch","newOptions","isEqual","deep","onMounted","onBeforeUnmount","_observer2","useVariables","variables","_document","values","varsArray","Object","entries","forEach","_ref","_ref2","_slicedToArray","key","varName","getColorTokenColor","targetElement","document","documentElement","mutationsList","some","mutation","type","attributeName","THEME_MODE","isString","isArray","_ref3","_ref4","defineComponent","name","props","setup","classPrefix","usePrefixClass","renderTNodeJSX","useTNodeJSX","_useConfig","useConfig","globalConfig","_useVariables","themeFgColor","themeBgColor","finalBgColor","computed","bgColor","finalFgColor","color","DEFAULT_FRONT_COLOR","imageSettings","_props2$iconSize$heig","_props2$iconSize","_props2$iconSize$widt","_props2$iconSize2","src","icon","x","y","height","isNumber","iconSize","width","excavate","crossOrigin","classes","concat","_defineProperty","borderless","mergedStyle","backgroundColor","size","QRCodeProps","fgColor","level","_createVNode","_mergeProps","status","QRcodeStatus","onRefresh","params","QRCodeCanvas","QRCodeSVG"],"mappings":"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"}