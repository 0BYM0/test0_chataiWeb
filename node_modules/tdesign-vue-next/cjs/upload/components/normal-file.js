/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Vue = require('vue');
var _toConsumableArray = require('@babel/runtime/helpers/toConsumableArray');
var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var tdesignIconsVueNext = require('tdesign-icons-vue-next');
var loading_index = require('../../loading/index.js');
var link_index = require('../../link/index.js');
require('@babel/runtime/helpers/typeof');
require('../../_chunks/dep-8fba4765.js');
var index$1 = require('../../_chunks/dep-7ccc7687.js');
require('../../config-provider/hooks/useConfig.js');
var index = require('../../_chunks/dep-df51b341.js');
require('@babel/runtime/helpers/slicedToArray');
var utils = require('../../_chunks/dep-01eb56da.js');
require('../../_chunks/dep-8523711b.js');
var upload_consts_index = require('../consts/index.js');
require('../../_chunks/dep-8400584d.js');
require('../../loading/plugin.js');
require('../../_chunks/dep-ee16025d.js');
require('../../loading/icon/gradient.js');
require('../../_chunks/dep-8500f5b7.js');
require('../../_chunks/dep-d7a24f22.js');
require('../../_chunks/dep-45fba3e8.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('../../_chunks/dep-28faee79.js');
require('../../_chunks/dep-76fcae27.js');
require('../../_chunks/dep-3509ae3d.js');
require('../../_chunks/dep-359510f3.js');
require('../../_chunks/dep-f906312d.js');
require('../../_chunks/dep-53e7d6ea.js');
require('../../_chunks/dep-9036997f.js');
require('../../_chunks/dep-5b5ab11b.js');
require('../../_chunks/dep-0eaf28bf.js');
require('../../_chunks/dep-eb1b4ee7.js');
require('dayjs');
require('../../_chunks/dep-1fc38e0f.js');
require('../../_chunks/dep-ab1d761f.js');
require('../../_chunks/dep-28d847a7.js');
require('../../_chunks/dep-d7893d44.js');
require('../../_chunks/dep-4708e1c0.js');
require('../../_chunks/dep-df147fc1.js');
require('../../_chunks/dep-505a0867.js');
require('../../_chunks/dep-1c58a5b0.js');
require('../../_chunks/dep-ccf6c349.js');
require('../../_chunks/dep-6dcd468b.js');
require('../../_chunks/dep-5f046b75.js');
require('../../_chunks/dep-d401bebf.js');
require('../../_chunks/dep-07964ae0.js');
require('../../_chunks/dep-303fa046.js');
require('../../_chunks/dep-e4d8e384.js');
require('../../_chunks/dep-164c7de5.js');
require('../../_chunks/dep-b7f2b504.js');
require('@babel/runtime/helpers/createClass');
require('@babel/runtime/helpers/classCallCheck');
require('../../_chunks/dep-868e1f85.js');
require('../../_chunks/dep-3ec672f9.js');
require('../../loading/props.js');
require('../../_chunks/dep-d6bf0a64.js');
require('../../_chunks/dep-e9b94c97.js');
require('../../_chunks/dep-0305ebce.js');
require('../../_chunks/dep-2dec2180.js');
require('../../_chunks/dep-727cd003.js');
require('../../_chunks/dep-f504993c.js');
require('../../_chunks/dep-2f93690b.js');
require('../../_chunks/dep-8fef7bc0.js');
require('../../_chunks/dep-c79defa2.js');
require('../../_chunks/dep-823cb2f3.js');
require('../../_chunks/dep-13ae23f9.js');
require('../../_chunks/dep-856c334c.js');
require('../../_chunks/dep-6fc75111.js');
require('../../_chunks/dep-c86d2c66.js');
require('../../_chunks/dep-fb930305.js');
require('../../_chunks/dep-32074184.js');
require('../../_chunks/dep-be494b00.js');
require('../../_chunks/dep-41ff0a93.js');
require('../../link/link.js');
require('../../_chunks/dep-2b622501.js');
require('../../_chunks/dep-86eb8dfc.js');
require('../../link/props.js');
require('../../_chunks/dep-41c21e8f.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _toConsumableArray__default = /*#__PURE__*/_interopDefaultLegacy(_toConsumableArray);
var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty__default["default"](e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !Vue.isVNode(s);
}
var NormalFile = Vue.defineComponent({
  name: "UploadNormalFile",
  props: _objectSpread({
    multiple: Boolean
  }, upload_consts_index.commonProps),
  setup: function setup(props, _ref) {
    var slots = _ref.slots;
    var _toRefs = Vue.toRefs(props),
      theme = _toRefs.theme,
      disabled = _toRefs.disabled,
      classPrefix = _toRefs.classPrefix;
    var locale = Vue.computed(function () {
      return props.locale;
    });
    var _useGlobalIcon = index.useGlobalIcon({
        CloseIcon: tdesignIconsVueNext.CloseIcon,
        TimeFilledIcon: tdesignIconsVueNext.TimeFilledIcon,
        CheckCircleFilledIcon: tdesignIconsVueNext.CheckCircleFilledIcon,
        ErrorCircleFilledIcon: tdesignIconsVueNext.ErrorCircleFilledIcon,
        CloseCircleFilledIcon: tdesignIconsVueNext.CloseCircleFilledIcon
      }),
      CloseIcon = _useGlobalIcon.CloseIcon,
      TimeFilledIcon = _useGlobalIcon.TimeFilledIcon,
      CheckCircleFilledIcon = _useGlobalIcon.CheckCircleFilledIcon,
      ErrorCircleFilledIcon = _useGlobalIcon.ErrorCircleFilledIcon,
      CloseCircleFilledIcon = _useGlobalIcon.CloseCircleFilledIcon;
    var renderTNodeJSX = index$1.useTNodeJSX();
    var uploadPrefix = "".concat(classPrefix.value, "-upload");
    var renderProgress = function renderProgress(percent) {
      return Vue.createVNode("div", {
        "class": "".concat(uploadPrefix, "__single-progress")
      }, [Vue.createVNode(loading_index.Loading, null, null), props.showUploadProgress && Vue.createVNode("span", {
        "class": "".concat(uploadPrefix, "__single-percent")
      }, [percent || 0, "%"])]);
    };
    var renderFilePreviewAsText = function renderFilePreviewAsText(files) {
      var _files$;
      if (theme.value !== "file") return null;
      if (!props.multiple && ((_files$ = files[0]) === null || _files$ === void 0 ? void 0 : _files$.status) === "fail" && props.autoUpload) {
        return null;
      }
      return files.map(function (file, index) {
        var fileName = props.abridgeName && file.name ? utils.abridgeName.apply(void 0, [file.name].concat(_toConsumableArray__default["default"](props.abridgeName))) : file.name;
        return Vue.createVNode("div", {
          "class": "".concat(uploadPrefix, "__single-display-text ").concat(uploadPrefix, "__display-text--margin"),
          "key": file.name + index + file.percent + file.status
        }, [file.url ? Vue.createVNode(link_index.Link, {
          "href": file.url,
          "target": "_blank",
          "hover": "color",
          "size": "small",
          "class": "".concat(uploadPrefix, "__single-name"),
          "disabled": false
        }, _isSlot(fileName) ? fileName : {
          "default": function _default() {
            return [fileName];
          }
        }) : Vue.createVNode("span", {
          "class": "".concat(uploadPrefix, "__single-name")
        }, [fileName]), file.status === "fail" && Vue.createVNode("div", {
          "class": "".concat(uploadPrefix, "__flow-status ").concat(uploadPrefix, "__file-fail")
        }, [Vue.createVNode(ErrorCircleFilledIcon, null, null)]), file.status === "waiting" && Vue.createVNode("div", {
          "class": "".concat(uploadPrefix, "__flow-status ").concat(uploadPrefix, "__file-waiting")
        }, [Vue.createVNode(TimeFilledIcon, null, null)]), file.status === "progress" && renderProgress(file.percent), !disabled.value && file.status !== "progress" && Vue.createVNode(CloseIcon, {
          "class": "".concat(uploadPrefix, "__icon-delete"),
          "onClick": function onClick(_ref2) {
            var e = _ref2.e;
            return props.onRemove({
              e: e,
              file: file,
              index: index
            });
          }
        }, null)]);
      });
    };
    var renderFilePreviewAsInput = function renderFilePreviewAsInput() {
      var _props$abridgeName;
      if (theme.value !== "file-input") return;
      var file = props.displayFiles[0] || [];
      var inputTextClass = ["".concat(classPrefix.value, "-input__inner"), _defineProperty__default["default"]({}, "".concat(uploadPrefix, "__placeholder"), !props.displayFiles[0])];
      var disabledClass = disabled.value ? "".concat(classPrefix.value, "-is-disabled") : "";
      var fileName = (_props$abridgeName = props.abridgeName) !== null && _props$abridgeName !== void 0 && _props$abridgeName.length && file !== null && file !== void 0 && file.name ? utils.abridgeName.apply(void 0, [file.name].concat(_toConsumableArray__default["default"](props.abridgeName))) : file === null || file === void 0 ? void 0 : file.name;
      return Vue.createVNode("div", {
        "class": "".concat(uploadPrefix, "__single-input-preview ").concat(classPrefix.value, "-input ").concat(disabledClass)
      }, [Vue.createVNode("div", {
        "class": inputTextClass
      }, [Vue.createVNode("span", {
        "class": ["".concat(uploadPrefix, "__single-input-text"), _defineProperty__default["default"]({}, props.placeholderClass, props.placeholder && !(file !== null && file !== void 0 && file.name))]
      }, [file !== null && file !== void 0 && file.name ? fileName : props.placeholder]), (file === null || file === void 0 ? void 0 : file.status) === "progress" && renderProgress(file.percent), (file === null || file === void 0 ? void 0 : file.status) === "waiting" && Vue.createVNode(TimeFilledIcon, {
        "class": "".concat(uploadPrefix, "__status-icon ").concat(uploadPrefix, "__file-waiting")
      }, null), file.status === "success" && Vue.createVNode(CheckCircleFilledIcon, {
        "class": "".concat(uploadPrefix, "__status-icon")
      }, null), (file === null || file === void 0 ? void 0 : file.name) && file.status === "fail" && Vue.createVNode(ErrorCircleFilledIcon, {
        "class": "".concat(uploadPrefix, "__status-icon ").concat(uploadPrefix, "__file-fail")
      }, null), Boolean(!disabled.value && file.name) && Vue.createVNode(CloseCircleFilledIcon, {
        "class": "".concat(uploadPrefix, "__single-input-clear"),
        "onClick": function onClick(_ref5) {
          var e = _ref5.e;
          return props.onRemove({
            e: e,
            file: file,
            index: 0
          });
        }
      }, null)])]);
    };
    return function () {
      var _slots$default, _displayFiles$, _displayFiles$0$respo;
      var classes = ["".concat(uploadPrefix, "__single"), "".concat(uploadPrefix, "__single-").concat(theme.value)];
      var fileListDisplay = renderTNodeJSX("fileListDisplay", {
        params: {
          onRemove: props.onRemove,
          toUploadFiles: props.toUploadFiles,
          sizeOverLimitMessage: props.sizeOverLimitMessage,
          locale: props.locale,
          files: props.displayFiles
        }
      });
      if (props.fileListDisplay === null || fileListDisplay === null) {
        fileListDisplay = null;
      }
      var displayFiles = props.displayFiles;
      return Vue.createVNode("div", {
        "class": classes
      }, [theme.value === "file-input" && renderFilePreviewAsInput(), (_slots$default = slots["default"]) === null || _slots$default === void 0 ? void 0 : _slots$default.call(slots), theme.value === "file" && props.placeholder && !displayFiles[0] && Vue.createVNode("small", {
        "class": [props.tipsClasses, props.placeholderClass]
      }, [props.placeholder]), fileListDisplay === null ? null : fileListDisplay || renderFilePreviewAsText(displayFiles), !props.multiple && ((_displayFiles$ = displayFiles[0]) === null || _displayFiles$ === void 0 ? void 0 : _displayFiles$.status) === "fail" && theme.value === "file" ? Vue.createVNode("small", {
        "class": [props.errorClasses, props.placeholderClass]
      }, [((_displayFiles$0$respo = displayFiles[0].response) === null || _displayFiles$0$respo === void 0 ? void 0 : _displayFiles$0$respo.error) || locale.value.progress.failText]) : null]);
    };
  }
});

exports["default"] = NormalFile;
//# sourceMappingURL=normal-file.js.map
