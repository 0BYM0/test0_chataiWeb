/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Vue = require('vue');
var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var tdesignIconsVueNext = require('tdesign-icons-vue-next');
require('@babel/runtime/helpers/toConsumableArray');
require('@babel/runtime/helpers/typeof');
require('../../_chunks/dep-8fba4765.js');
var index$2 = require('../../_chunks/dep-7ccc7687.js');
var index = require('../../_chunks/dep-8500f5b7.js');
var index$1 = require('../../_chunks/dep-df51b341.js');
require('@babel/runtime/helpers/slicedToArray');
require('../../_chunks/dep-8523711b.js');
var index$3 = require('../../_chunks/dep-1da09c73.js');
var format = require('../../_chunks/dep-5f0c0560.js');
var datePicker_hooks_useRangeValue = require('./useRangeValue.js');
var omit = require('../../_chunks/dep-c467569f.js');
var configProvider_hooks_useConfig = require('../../config-provider/hooks/useConfig.js');
require('../../_chunks/dep-5b5ab11b.js');
require('../../_chunks/dep-868e1f85.js');
require('../../_chunks/dep-d7893d44.js');
require('../../_chunks/dep-359510f3.js');
require('../../_chunks/dep-4708e1c0.js');
require('../../_chunks/dep-3509ae3d.js');
require('../../_chunks/dep-f906312d.js');
require('../../_chunks/dep-53e7d6ea.js');
require('../../_chunks/dep-d6bf0a64.js');
require('../../_chunks/dep-e9b94c97.js');
require('../../_chunks/dep-0305ebce.js');
require('../../_chunks/dep-2dec2180.js');
require('../../_chunks/dep-727cd003.js');
require('../../_chunks/dep-f504993c.js');
require('../../_chunks/dep-2f93690b.js');
require('../../_chunks/dep-8fef7bc0.js');
require('../../_chunks/dep-0eaf28bf.js');
require('../../_chunks/dep-eb1b4ee7.js');
require('dayjs');
require('../../_chunks/dep-1fc38e0f.js');
require('../../_chunks/dep-ab1d761f.js');
require('../../_chunks/dep-28d847a7.js');
require('../../_chunks/dep-df147fc1.js');
require('../../_chunks/dep-505a0867.js');
require('../../_chunks/dep-1c58a5b0.js');
require('../../_chunks/dep-ccf6c349.js');
require('../../_chunks/dep-6dcd468b.js');
require('../../_chunks/dep-5f046b75.js');
require('../../_chunks/dep-d401bebf.js');
require('../../_chunks/dep-07964ae0.js');
require('@babel/runtime/helpers/createClass');
require('@babel/runtime/helpers/classCallCheck');
require('../../_chunks/dep-86eb8dfc.js');
require('../../_chunks/dep-41c21e8f.js');
require('../../_chunks/dep-e3ed17b8.js');
require('../../_chunks/dep-303fa046.js');
require('../../_chunks/dep-e4d8e384.js');
require('../../_chunks/dep-164c7de5.js');
require('../../_chunks/dep-b7f2b504.js');
require('../../_chunks/dep-fb930305.js');
require('../../_chunks/dep-fa954864.js');
require('../../_chunks/dep-44c5a558.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty__default["default"](e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var PARTIAL_MAP = {
  first: "start",
  second: "end"
};
function useRange(props) {
  var COMPONENT_NAME = index.usePrefixClass("date-range-picker");
  var _useConfig = configProvider_hooks_useConfig.useConfig("datePicker"),
    globalConfig = _useConfig.globalConfig;
  var _useGlobalIcon = index$1.useGlobalIcon({
      CalendarIcon: tdesignIconsVueNext.CalendarIcon
    }),
    CalendarIcon = _useGlobalIcon.CalendarIcon;
  var renderTNodeJSX = index$2.useTNodeJSX();
  var isMountedRef = Vue.ref(false);
  var inputRef = Vue.ref();
  var _useRangeValue = datePicker_hooks_useRangeValue.useRangeValue(props),
    value = _useRangeValue.value,
    onChange = _useRangeValue.onChange,
    time = _useRangeValue.time,
    month = _useRangeValue.month,
    year = _useRangeValue.year,
    cacheValue = _useRangeValue.cacheValue,
    isFirstValueSelected = _useRangeValue.isFirstValueSelected;
  var formatRef = Vue.computed(function () {
    return format.getDefaultFormat({
      mode: props.mode,
      format: props.format,
      valueType: props.valueType,
      enableTimePicker: props.enableTimePicker
    });
  });
  var popupVisible = Vue.ref(false);
  var isHoverCell = Vue.ref(false);
  var activeIndex = Vue.ref(0);
  var inputValue = Vue.ref(format.formatDate(props.value, {
    format: formatRef.value.format
  }));
  var isReadOnly = index$3.useReadonly();
  var rangeInputProps = Vue.computed(function () {
    return _objectSpread(_objectSpread({}, props.rangeInputProps), {}, {
      size: props.size,
      ref: inputRef,
      borderless: props.borderless,
      clearable: props.clearable && !isReadOnly.value,
      prefixIcon: function prefixIcon() {
        return renderTNodeJSX("prefixIcon");
      },
      readonly: isReadOnly.value || !props.allowInput,
      separator: props.separator || globalConfig.value.rangeSeparator,
      placeholder: props.placeholder || globalConfig.value.placeholder[props.mode],
      activeIndex: popupVisible.value ? activeIndex.value : void 0,
      suffixIcon: function suffixIcon() {
        return renderTNodeJSX("suffixIcon") || Vue.createVNode(CalendarIcon, null, null);
      },
      "class": _defineProperty__default["default"]({}, "".concat(COMPONENT_NAME.value, "__input--placeholder"), isHoverCell.value),
      onClick: function onClick(_ref) {
        var position = _ref.position;
        activeIndex.value = position === "first" ? 0 : 1;
      },
      onClear: function onClear(_ref2) {
        var e = _ref2.e;
        e.stopPropagation();
        popupVisible.value = false;
        onChange === null || onChange === void 0 || onChange([], {
          dayjsValue: [],
          trigger: "clear"
        });
      },
      onBlur: function onBlur(newVal, _ref3) {
        var _props$onBlur;
        var e = _ref3.e,
          position = _ref3.position;
        (_props$onBlur = props.onBlur) === null || _props$onBlur === void 0 || _props$onBlur.call(props, {
          value: newVal,
          partial: PARTIAL_MAP[position],
          e: e
        });
      },
      onFocus: function onFocus(newVal, _ref4) {
        var _props$onFocus;
        var e = _ref4.e,
          position = _ref4.position;
        (_props$onFocus = props.onFocus) === null || _props$onFocus === void 0 || _props$onFocus.call(props, {
          value: newVal,
          partial: PARTIAL_MAP[position],
          e: e
        });
        activeIndex.value = position === "first" ? 0 : 1;
      },
      onChange: function onChange(newVal, _ref5) {
        _ref5.e;
          _ref5.position;
        inputValue.value = newVal;
        if (!format.isValidDate(newVal, formatRef.value.format)) return;
        cacheValue.value = newVal;
        var newYear = [];
        var newMonth = [];
        var newTime = [];
        newVal.forEach(function (v) {
          newYear.push(format.parseToDayjs(v, formatRef.value.format).year());
          newMonth.push(format.parseToDayjs(v, formatRef.value.format).month());
          newTime.push(format.parseToDayjs(v, formatRef.value.format).format(formatRef.value.timeFormat));
        });
        year.value = newYear;
        month.value = newMonth;
        time.value = newTime;
      },
      onEnter: function onEnter(newVal) {
        if (!format.isValidDate(newVal, formatRef.value.format) && !format.isValidDate(value.value, formatRef.value.format)) return;
        popupVisible.value = false;
        if (format.isValidDate(newVal, formatRef.value.format)) {
          onChange === null || onChange === void 0 || onChange(format.formatDate(newVal, {
            format: formatRef.value.format,
            targetFormat: formatRef.value.valueType,
            autoSwap: true
          }), {
            dayjsValue: newVal.map(function (v) {
              return format.parseToDayjs(v, formatRef.value.format);
            }),
            trigger: "enter"
          });
        } else if (format.isValidDate(value.value, formatRef.value.format)) {
          inputValue.value = format.formatDate(value.value, {
            format: formatRef.value.format
          });
        } else {
          inputValue.value = [];
        }
      }
    });
  });
  var popupProps = Vue.computed(function () {
    var _props$popupProps$ove, _props$popupProps, _props$popupProps2;
    return _objectSpread(_objectSpread({
      expandAnimation: true
    }, omit.omit(props.popupProps, "on-visible-change")), {}, {
      overlayInnerStyle: (_props$popupProps$ove = (_props$popupProps = props.popupProps) === null || _props$popupProps === void 0 ? void 0 : _props$popupProps.overlayInnerStyle) !== null && _props$popupProps$ove !== void 0 ? _props$popupProps$ove : {
        width: "auto"
      },
      overlayClassName: [(_props$popupProps2 = props.popupProps) === null || _props$popupProps2 === void 0 ? void 0 : _props$popupProps2.overlayClassName, "".concat(COMPONENT_NAME.value, "__panel-container")],
      onVisibleChange: function onVisibleChange(visible, context) {
        var _props$popupProps3, _props$popupProps3$on, _props$popupProps4, _props$popupProps4$on;
        if (isReadOnly.value) return;
        (_props$popupProps3 = props.popupProps) === null || _props$popupProps3 === void 0 || (_props$popupProps3$on = _props$popupProps3.onVisibleChange) === null || _props$popupProps3$on === void 0 || _props$popupProps3$on.call(_props$popupProps3, visible, context);
        (_props$popupProps4 = props.popupProps) === null || _props$popupProps4 === void 0 || (_props$popupProps4$on = _props$popupProps4["on-visible-change"]) === null || _props$popupProps4$on === void 0 || _props$popupProps4$on.call(_props$popupProps4, visible, context);
        if (context.trigger === "trigger-element-click") {
          var indexMap = {
            0: "first",
            1: "second"
          };
          inputRef.value.focus({
            position: indexMap[activeIndex.value]
          });
          popupVisible.value = true;
          return;
        }
        popupVisible.value = visible;
      }
    });
  });
  Vue.watch(value, function (value2) {
    if (!value2) {
      inputValue.value = [];
      return;
    }
    if (!format.isValidDate(value2, formatRef.value.format)) return;
    inputValue.value = format.formatDate(value2, {
      format: formatRef.value.valueType,
      targetFormat: formatRef.value.format
    });
  }, {
    immediate: true
  });
  Vue.watch(activeIndex, function (index) {
    var _inputRef$value, _inputRef$value$focus;
    if (!isMountedRef.value) {
      isMountedRef.value = true;
      return;
    }
    if (!popupVisible.value) return;
    var indexMap = {
      0: "first",
      1: "second"
    };
    (_inputRef$value = inputRef.value) === null || _inputRef$value === void 0 || (_inputRef$value$focus = _inputRef$value.focus) === null || _inputRef$value$focus === void 0 || _inputRef$value$focus.call(_inputRef$value, {
      position: indexMap[index]
    });
  }, {
    immediate: true
  });
  return {
    year: year,
    month: month,
    value: value,
    time: time,
    inputValue: inputValue,
    popupVisible: popupVisible,
    rangeInputProps: rangeInputProps,
    popupProps: popupProps,
    isHoverCell: isHoverCell,
    activeIndex: activeIndex,
    isFirstValueSelected: isFirstValueSelected,
    cacheValue: cacheValue,
    onChange: onChange
  };
}

exports.PARTIAL_MAP = PARTIAL_MAP;
exports.useRange = useRange;
//# sourceMappingURL=useRange.js.map
