/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

import { ref, watch, createVNode } from 'vue';
import 'lodash-es';
import '@babel/runtime/helpers/toConsumableArray';
import '@babel/runtime/helpers/typeof';
import '../../_chunks/dep-2ebbfb02.js';
import '../../config-provider/hooks/useConfig.js';
import '@babel/runtime/helpers/slicedToArray';
import '../../_chunks/dep-d7438c38.js';
import '@babel/runtime/helpers/defineProperty';
import 'tdesign-icons-vue-next';
import '../../checkbox/index.js';
import '../../loading/index.js';
import { p as privateKey } from '../../_chunks/dep-28352e9c.js';
import TreeItem from '../tree-item.js';
import useTreeEvents from './useTreeEvents.js';
import '../../_chunks/dep-9dbbf468.js';
import '../../config-provider/utils/context.js';
import '../../_chunks/dep-12656268.js';
import 'dayjs';
import '@babel/runtime/helpers/createClass';
import '@babel/runtime/helpers/classCallCheck';
import '../../checkbox/checkbox.js';
import '../../checkbox/props.js';
import '../../_chunks/dep-63405667.js';
import '../../_chunks/dep-b3383d08.js';
import '../../_chunks/dep-63d8d6a4.js';
import '../../_chunks/dep-3f5a3be0.js';
import '../../_chunks/dep-ea83a66c.js';
import '../../_chunks/dep-5b12c3c1.js';
import '../../_chunks/dep-44837826.js';
import '../../_chunks/dep-3fd220fd.js';
import '../../_chunks/dep-e26faff6.js';
import '../../_chunks/dep-f75f0445.js';
import '../../checkbox/consts/index.js';
import '../../checkbox/hooks/useCheckboxLazyLoad.js';
import '../../_chunks/dep-85ef14f4.js';
import '../../checkbox/hooks/useKeyboardEvent.js';
import '../../_chunks/dep-863ca30b.js';
import '../../checkbox/group.js';
import '../../checkbox/checkbox-group-props.js';
import '../../_chunks/dep-1fb9eacc.js';
import '../../_chunks/dep-19faee87.js';
import 'tdesign-vue-next/esm/common/style/web/components/checkbox/_index.less';
import '../../loading/directive.js';
import '../../loading/plugin.js';
import '../../_chunks/dep-b2639fe9.js';
import '../../loading/icon/gradient.js';
import '../../_chunks/dep-132b4411.js';
import '@babel/runtime/helpers/objectWithoutProperties';
import '../../loading/props.js';
import 'tdesign-vue-next/esm/common/style/web/components/loading/_index.less';
import '@babel/runtime/helpers/asyncToGenerator';
import '@babel/runtime/regenerator';
import '../../_chunks/dep-14c131e9.js';
import '../utils/adapt.js';
import '../../_chunks/dep-7dd8a8e4.js';
import '../../_chunks/dep-d305422f.js';
import '../../_chunks/dep-b44b87ac.js';
import '../../_chunks/dep-532ad333.js';
import '../../_chunks/dep-d0323177.js';
import './useItemState.js';
import './useTreeItem.js';
import './useItemEvents.js';
import './useRenderIcon.js';
import '../utils/index.js';
import './useRenderLabel.js';
import './useRenderLine.js';
import './useRenderOperations.js';
import './useDraggable.js';
import './useTreeAction.js';

function useTreeNodes(state) {
  var store = state.store,
    scope = state.scope,
    allNodes = state.allNodes,
    nodes = state.nodes,
    virtualConfig = state.virtualConfig;
  var _useTreeEvents = useTreeEvents(state),
    handleClick = _useTreeEvents.handleClick,
    handleChange = _useTreeEvents.handleChange;
  var nodesEmpty = ref(false);
  var cacheMap = /* @__PURE__ */new Map();
  var refresh = function refresh() {
    allNodes.value = store.getNodes();
  };
  var refreshVisibleNodes = function refreshVisibleNodes() {
    var isVirtual = virtualConfig === null || virtualConfig === void 0 ? void 0 : virtualConfig.isVirtualScroll.value;
    if (isVirtual) return;
    var list = [];
    var hasVisibleNode = false;
    allNodes.value.forEach(function (node) {
      if (node.visible) {
        hasVisibleNode = true;
        cacheMap.set(node.value, node.value);
      }
      if (cacheMap.has(node.value)) {
        list.push(node);
      }
    });
    cacheMap.forEach(function (value) {
      if (!store.getNode(value)) {
        cacheMap["delete"](value);
      }
    });
    nodes.value = list;
    nodesEmpty.value = !hasVisibleNode;
  };
  var refreshVirtualNodes = function refreshVirtualNodes() {
    var isVirtual = virtualConfig === null || virtualConfig === void 0 ? void 0 : virtualConfig.isVirtualScroll.value;
    if (!isVirtual) return;
    var list = virtualConfig.visibleData.value;
    nodes.value = list;
    nodesEmpty.value = list.length <= 0;
  };
  var renderItem = function renderItem(h, node, index, stateId) {
    var rowIndex = node.VIRTUAL_SCROLL_INDEX || index;
    var nodeUniqueId = node[privateKey];
    var treeItem = createVNode(TreeItem, {
      "key": nodeUniqueId,
      "rowIndex": rowIndex,
      "stateId": stateId,
      "itemKey": nodeUniqueId,
      "treeScope": scope,
      "onClick": handleClick,
      "onChange": handleChange
    }, null);
    return treeItem;
  };
  var renderTreeNodes = function renderTreeNodes(h) {
    var stateId = "render-".concat(new Date().getTime());
    var treeNodeViews = nodes.value.map(function (node, index) {
      return renderItem(h, node, index, stateId);
    });
    return treeNodeViews;
  };
  watch(allNodes, refreshVisibleNodes);
  watch(virtualConfig.visibleData, refreshVirtualNodes);
  refresh();
  refreshVisibleNodes();
  refreshVirtualNodes();
  store.emitter.on("update", refresh);
  return {
    nodesEmpty: nodesEmpty,
    renderTreeNodes: renderTreeNodes
  };
}

export { useTreeNodes as default };
//# sourceMappingURL=useTreeNodes.js.map
